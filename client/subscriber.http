@base-url = http://localhost:5050
@user-id = 1
@property-id = 1
@rent-id = 1
@interest-id = 1

@jwt-token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sZSI6IkFETUlOIiwiaWF0IjoxNjIzNTA0MjAwLCJleHAiOjE2MjQxMDkwMDB9.4FqzWoIivH-NNCaNjViG1lTvNvP544-trfpOB9QQqVU

// SUBSCRIBER (logged users )

### Get limited user infos by user-id
GET {{base-url}}/subscriber/{{user-id}}/user HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}

### Get all user infos by user-id
GET {{base-url}}/subscriber/full-user HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}

### Update user data
PATCH {{base-url}}/subscriber/user HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}

{
    "name": "Vinicius",
    "sex": "MALE"
}

### Update user img
PATCH {{base-url}}/subscriber/user/image HTTP/1.1
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization: {{jwt-token}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="avatar"; filename="1.png"
Content-Type: image/png

< ./1.png
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Delete user
DELETE {{base-url}}/subscriber/user HTTP/1.1

### Get all favorites from user
GET {{base-url}}/subscriber/favorites HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}

### Create favorite property if it not exists
PATCH {{base-url}}/subscriber/{{property-id}}/favorites HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}

### Get all user evaluation
GET {{base-url}}/subscriber/evaluate HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}

### Get all rents and average from evaluation
GET {{base-url}}/subscriber/{{property-id}}/rent HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}

### Get all rents and average from evaluation where user is guest
GET {{base-url}}/subscriber/rent HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}

### Create interest if it's not already exists
POST {{base-url}}/subscriber/{{property-id}}/interest HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}

### Create interest if it's already exists delete it
PATCH {{base-url}}/subscriber/{{property-id}}/interest HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}

### Change existing interest to set uConfirmation (user confirmation)
@uConfirmation=true
PATCH {{base-url}}/subscriber/{{interest-id}}/interest HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}
{
    "uConfirmation": {{uConfirmation}}
}

### Delete interest by property-id
DELETE {{base-url}}/subscriber/{{property-id}}/interest HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}

### Delete interest by interest-id
PATCH {{base-url}}/subscriber/{{interest-id}}/interest HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}

### Delete interest by interest-id
PATCH {{base-url}}/subscriber/{{interest-id}}/interest HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}

### Change rent to add or update value (1-5) and comment evaluate
@value=5
@comment="Algum comentÃ¡rio"
PATCH {{base-url}}/subscriber/rent/evaluate HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}
{
    "value": {{value}},
    "comment": {{comment}}
}

### Create property and change user role to "OWNER" if is not ADMIN
PATCH {{base-url}}/subscriber/property HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}
{
    "value": {{value}},
    "comment": {{comment}}
}

### Delete specific rent
DELETE {{base-url}}/subscriber/{{user-id}}/rent HTTP/1.1
Content-Type: application/json
Authorization: {{jwt-token}}